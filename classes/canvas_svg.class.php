<?php
require_once("classes/canvas.interface.php");
require_once("includes/point.php");
class Canvas_SVG implements iCanvas {
   private $xml;
   protected $error = false;
   protected $pathdata = array();
   protected $linewidth = 1; // sirka line - kruhy 2x sirsi defaultne
   function __construct($x,$y){
   	 $this->xml = <<<EOT
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="$x" height="$y"  xmlns="http://www.w3.org/2000/svg" version="1.1">
<desc></desc>
<!-- generated by drf2track.php (c) Kamil Vlcek -->

EOT;

   }
   public function SetWidth($width){
   	 $this->linewidth = $width;
   }
   public function Circle($center,$diam,$color,$filled=false,$width=false){
   	if(!$width) $width = $this->linewidth*2; // kruhy defaultne 2x sirsi nez cary
    $r = (int) $diam/2;
    $this->xml .=
    "<circle cx='$center[0]' cy='$center[1]' r='$r' fill='".($filled?$color:'none')."' stroke='$color' stroke-width='$width' />\n";
   }
   public function Line($point1,$point2,$color,$width=false){
   	if(!$width) $width = $this->linewidth;
    $this->xml .=
    "<line x1='$point1[0]' y1='$point1[1]' x2='$point2[0]' y2='$point2[1]' stroke='$color' stroke-width='$width' />\n";
   }
   public function SaveImg($filename){
     $this->paths_save();
     $this->xml .=  "</svg>";
     $fh = @fopen($filename.".svg","wt");
     if($fh){
	     fwrite($fh,$this->xml);
	     fclose($fh);
	     return $filename.".svg";
     } else {
     	 echo "\n!!nemohu otevrit soubor $filename.svg pro zapis\n";
     	 return false;
     }
   }
   public function ArcAngles($center,$diam,$angle0,$angle1,$color,$filled=false,$width=false,$large=false){
   	 if(!$width) $width = $this->linewidth*2; // kruhy defaultne 2x sirsi nez cary
     // arc vede z angle0 do angle1
     $start = bodadd(angledist2xy(deg2rad($angle0),$diam/2),$center);
      $end =  bodadd(angledist2xy(deg2rad($angle1),$diam/2),$center);
      if($angle0-$angle1>180) $angle1+=360;
      if($angle1-$angle0>180) $angle0+=360;
      if($angle0>$angle1){
        $left = $large;
      } else {
        $left = !$large;
      }
      $this->Arc($start,$end,$diam,$color,$filled,$left,$large,$width);
   }
   public function Arc($start,$end,$diam,$color,$filled,$left,$large,$width=false){
   	 if(!$width) $width = $this->linewidth*2; // kruhy defaultne 2x sirsi nez cary
     $r = (int) $diam/2; //radius
     $width = (int) $width;
     $this->xml .=
     "<path d='M ".((int)$start[0]).",".((int)$start[1])." A $r,$r 0 ".($large?1:0).",".($left?1:0)." ".((int)$end[0]).",".((int)$end[1])."' stroke='$color' fill='".($filled?$color:'none')."' stroke-width='$width' />\n";
   }
   public function Text($center,$size,$color,$text){
      $this->xml .= "<text x='$center[0]' y='$center[1]'  fill='$color' font-family='Arial' font-size='$size' >$text</text>\n";
   }

   public function PathStart($name,$color,$width=false){
   	if(!$width) $width = $this->linewidth;
    $this->pathdata[$name]['color']=$color;
    $this->pathdata[$name]['width']=$width;

   }

  public function PathAddNode($name,$bod,$colormark=false,$diammark=false,$line=true){
    $point = array('xy'=>$bod);
    if($colormark) $point['color']=$colormark;
    if($diammark) $point['diam']=$diammark;
    if(!$line) $point['move']=1;
    $this->pathdata[$name]['points'][]=$point;
  }
  public function PathAddCircleMarker($name,$diam,$color,$filled,$width=false){
  	if(!$width) $width = $this->linewidth;
    $this->pathdata[$name]['marker']=array('diam'=>$diam,'color'=>$color,'filled'=>$filled,'width'=>$width);
  }

  private function paths_save(){
    if(count($this->pathdata)>0){
       $path="";
       $markers='';
       $lastpathcommand = '';
       foreach($this->pathdata as $name=>$data){
         // COREL ASI NEUMI MARKERY POUZIVAT, importuje to bez nich
         // tak to udelam jako group of circles
         if(isset($data['marker'])){
           $fill = $data['marker']['filled']?$data['marker']['color']:'none';
           $r = (int) $data['marker']['diam']/2;
           $markers.= "<g name='$name' stroke = '{$data['marker']['color']}' stroke-width = '{$data['marker']['width']}' fill = '$fill' >\n" ;

                 /*  $diam = (int) $data['marker']['diam'];
                 $r = (int) $data['marker']['diam'];
                 $path .= "<marker id = 'MidMarker_$name' viewBox = '-$r $r -$r $r' refX = '0' refY = '0' markerWidth = '$diam' markerHeight = '$diam' stroke = '$data[marker][color]' stroke-width = '$data[marker][width]' fill = '$data[marker][color]' orient = 'auto'>";
                 $path .= "<circle cx = '0' cy = '0' r = '$r' />";
                 $path .= "</marker>\n";*/
         }
         $path .= "<path name='$name' stroke='$data[color]' fill='none' stroke-width='$data[width]'"; 
         $lastpoint = new CPoint();
         if(isset($data['points'])){ // muze se stat, ze track je prazdny
	         foreach($data['points'] as $i=>$point){ 
	           $bod = new CPoint ((int) $point['xy'][0],(int) $point['xy'][1]);
	           if($lastpoint == $bod) continue; // pokud byl predtim stejny bod, nebudu ho vypisovat do XML
	           else $lastpoint = $bod;
	           if($i==0){
	             $path .= " d='M $bod[0],$bod[1] ";
	             $lastpathcommand = 'M';
	           } else {
	             if(isset($point['move']) && $point['move']){
	               $command = ($lastpathcommand == 'M')?'':'M';
	             } else {
	               $command = ($lastpathcommand == 'L')?'':'L';
	             }
	             $path .= "$command $bod[0],$bod[1] ";
	             if($command !='') $lastpathcommand = $command;
	           }
	           if(isset($data['marker'])){ // velikost individualniho bodu
	             //$path .= " marker-mid = 'url(#MidMarker_$name)'";
	             if(isset($point['diam'])) {
	               $rpoint = (int)$point['diam']/2;
	             } else {
	               $rpoint = $r;
	             }
	
	             if(isset($point['color'])) { // barva individualniho bodu
	                $colorpoint = "stroke='$point[color]' ";
	                $colorpoint .= "fill='".(($data['marker']['filled'])?$point['color']:'none')."' ";
	             } else {
	               $colorpoint = "";
	             }
	             $markers .= "<circle cx = '$bod[0]' cy = '$bod[1]' r = '$rpoint' $colorpoint />\n";
	           }
	         }
	         $path .= "' />\n";
         } else {
         	 $path .= " />\n"; // pokud zadne body v tracku 
         }
         
         
         if(isset($data['marker'])) $markers .="</g>\n";
       }
       $this->xml.=$path.$markers;
     }
  }


}

