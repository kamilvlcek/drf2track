<?php

/**
 * trida na ukladani sql dotazu,jejich vysledku a jinych tisku do zvlastniho soubour
 * zavedena 8.10.2009 kvuli moznosti nastaveni limitu bufferu
 */

class Logout {
  private $buffer; // buffer v ram, pokud bude vetsi nez MAXSIZE, ulozi se do souboru
  const MAXSIZE = 10000;
  private $filename;
  private $saved; // kolik jiz bylo ulozeno
  private $nechat_soubor; // jestli soubor nechat po ukonceni
  private $anchors_xml;
  private $anchors_sql;
  function __construct($filename=false,$nechat=false){
    global $logout;
    if($logout || $nechat) $this->nechat_soubor = true;
    $this->start($filename);
  }
  public function log($msg,$type=0) {
    switch ($type){
    case 1:
      $name = "xml".count($this->anchors_xml);
      $msg = "<a name='$name'></a>\n".$msg;
      $this->anchors_xml[]=$name;
      break;
    case 2:
      $name = "sql".count($this->anchors_sql);
      $msg =  "<a name='$name'></a>\n".$msg;
      $this->anchors_sql[]=$name;
      break;
    }
    $this->buffer.=$msg."\n";
    if(strlen($this->buffer)>self::MAXSIZE){
      $this->save();
      $this->buffer = '';
    }
  }
  public function start($filename=false){
    $this->buffer = '';
    $this->saved = 0;
    $sid = session_id();
    $this->filename = ($filename)?$filename:dirname($_SERVER['SCRIPT_FILENAME'])."/files/logout.".self()."-$sid.log.html";
    $this->anchors_sql = $this->anchors_xml= array();
    //echo $this->filename;
    // pridam sid do filename, protoze muze na tomtez souboru byt nekolik pozadavku soucasne
      /*
    $filename1 = dirname($_SERVER['SCRIPT_FILENAME'])."/files/logout.".self()."1.log.html";
    $filename2 = dirname($_SERVER['SCRIPT_FILENAME'])."/files/logout.".self()."2.log.html";

    if(!file_exists($filename1))                             $filename = $filename1;
    elseif(!file_exists($filename2))                         $filename = $filename2;
    elseif( filemtime($filename1) < filemtime($filename2))   $filename = $filename1;
    else                                                     $filename = $filename2;
    */

  }
  private function filename_permanent(){
    return dirname($_SERVER['SCRIPT_FILENAME'])."/files/logout.".self().".log.html";
  }
  public function save($filename=false){
    if($filename && $filename!=$this->filename && file_exists($this->filename)){
      copy($this->filename,$filename);
    } else {
      $filename = $this->filename;
    }
    if($fh = fopen($filename,"a")){
      fwrite($fh,$this->buffer);
      fclose($fh);
     $this->saved += strlen($this->buffer);
    }
  }
  function __destruct(){
    //if(function_exists('memory_get_usage')) $this->buffer.= "Logout destruct: Memory Usage: ".memory_get_usage()."\n";
    $this->save();
    if(file_exists($this->filename)){
      if($this->nechat_soubor){
        copy($this->filename,$this->filename_permanent());
      }
      unlink($this->filename);
    }
  }
  /**
   * nedodelana funkce zamyslena pro ulozeni seznamu xml a sql prikazu. Ale jeste to bude chtit dodelat nejak nazvy (1. radky) prikazu
   *
   */
  private function saveanchors(){
    $arr = array();
    foreach ($this->anchors_sql as $a) {
    	$arr[]="<a href='#$a'>$a</a>";
    }
    $this->buffer .="<br>SQL: ".implode("|",$arr);

    $arr = array();
    foreach ($this->anchors_xml as $a) {
    	$arr[]="<a href='#$a'>$a</a>";
    }
    $this->buffer .="<br>XML: ".implode("|",$arr);
  }
}

/**
 * trida pro manipulaci s ruznymi vypisy
 * @author kamil
 *
 */
class Tisk  {
    /**
     * uprava s parametrem lenght 14.8.2009
     * uprava s parametrem $max_array 26.9.2009
     *
     * @param mixed $a
     * @param str $label
     * @param int $length
     * @param int $max_array
     * @param book $newline pokud false, odpoved je jeden radek bez \n a -- ; 29.1.2010
     * @return string
     */
    static public function dpshort($a,$label="",$length=1000,$max_array=100,$newline = true){
        //global $flog, $echodp;
        $ret = ($newline?"\n--":"").$label.":".($newline?"\n":"");
        if(is_array($a)){
          $n = 0;
          foreach($a as $key => $aa) {
            if(is_array($aa)){
              $ret .= dpshort($aa,"--$key",$length,$max_array);
            } elseif(is_object($aa)){
              $ret .= "".$key."=>Object; ";
            } elseif(is_bool($aa)){ // kamil 24.8.2010
              $ret .= "".$key.($aa?"=>bool(true); ":"=>bool(false); ");
            } else {
              $ret .= "".$key."=>".substr($aa,0,$length)."; ";
    
            }
            if(++$n>$max_array) break;
          }
    
        } else {
          $ret .= $a;
        }
        return $ret;
    }
    
    /**
     * vypise zformatovany backtrace
     * prevzato z projektu nev-dama
     */
    static public function backtrace($html=false){
        $backtrace = debug_backtrace();
        foreach($backtrace as $i=>$trace){
          echo "call $i: file ".$trace['file'].", line ".
          $trace['line'].", args: ".self::dpshort($trace['args'],"",30,5).($html?"<br>":"")."\n";
        }
    }

}
?>